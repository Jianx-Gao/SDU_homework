C51 COMPILER V9.59.0.0   MPU6050                                                           07/01/2020 15:24:24 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MPU6050
OBJECT MODULE PLACED IN ..\Output\MPU6050.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\Lib\MPU6050.C LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Lib;..\inc;..\
                    -Project) DEBUG OBJECTEXTEND PRINT(..\Output\MPU6050.lst) TABS(2) OBJECT(..\Output\MPU6050.obj)

line level    source

   1          #include "MPU6050.H" 
   2          uint8   dis[6];         //显示数字(-511至512)的字符数组
   3          uint8   up_zeros[2];          
   4          uint8   belowzeros[4];
   5          int dis_data;         //变量
   6          //********************************************************************************
   7          //小数部分转字符串
   8          //********************************************************************************
   9          void lcd_printf_below_zeros(uint8 *s,int temp_data)
  10          { 
  11   1      
  12   1      //  *s =temp_data/10000+0x30;
  13   1      //  temp_data=temp_data%10000;     //取余运算
  14   1      
  15   1        *s =temp_data/1000+0x30;
  16   1        temp_data=temp_data%1000;     //取余运算
  17   1      
  18   1        *++s =temp_data/100+0x30;
  19   1        temp_data=temp_data%100;     //取余运算
  20   1        *++s =temp_data/10+0x30;
  21   1        temp_data=temp_data%10;      //取余运算
  22   1        *++s =temp_data+0x30;   
  23   1      }
  24          //********************************************************************************
  25          //整数部分转字符串
  26          //********************************************************************************
  27          void lcd_printf(uint8 *s,int temp_data)
  28          {
  29   1      //  if(temp_data<0)
  30   1      //  {
  31   1      //    temp_data=-temp_data;
  32   1      //    *s='-';
  33   1      //  }
  34   1      //  else *s='+';
  35   1        
  36   1      //  *++s =temp_data/10000+0x30;
  37   1      //  temp_data=temp_data%10000;     //取余运算
  38   1      
  39   1      //  *++s =temp_data/1000+0x30;
  40   1      //  temp_data=temp_data%1000;     //取余运算
  41   1      
  42   1      //  *s =temp_data/100+0x30;
  43   1      //  temp_data=temp_data%100;     //取余运算
  44   1        *s =temp_data/10+0x30;
  45   1        temp_data=temp_data%10;      //取余运算
  46   1        *++s =temp_data+0x30;   
  47   1      }
  48          //*************************************************************************************************
  49          //I2C起始信号
  50          //*************************************************************************************************
  51          void I2C_Start()
  52          {
  53   1          SDA = 1;                    //拉高数据线
  54   1          SCL = 1;                    //拉高时钟线
C51 COMPILER V9.59.0.0   MPU6050                                                           07/01/2020 15:24:24 PAGE 2   

  55   1          Delay5us();                 //延时
  56   1          SDA = 0;                    //产生下降沿
  57   1          Delay5us();                 //延时
  58   1          SCL = 0;                    //拉低时钟线
  59   1      }
  60          //*************************************************************************************************
  61          //I2C停止信号
  62          //*************************************************************************************************
  63          void I2C_Stop()
  64          {
  65   1          SDA = 0;                    //拉低数据线
  66   1          SCL = 1;                    //拉高时钟线
  67   1          Delay5us();                 //延时
  68   1          SDA = 1;                    //产生上升沿
  69   1          Delay5us();                 //延时
  70   1      }
  71          //**************************************************************************************************
  72          //I2C发送应答信号
  73          //入口参数:ack (0:ACK 1:NAK)
  74          //**************************************************************************************************
  75          void I2C_SendACK(bit ack)
  76          {
  77   1          SDA = ack;                  //写应答信号
  78   1          SCL = 1;                    //拉高时钟线
  79   1          Delay5us();                 //延时
  80   1          SCL = 0;                    //拉低时钟线
  81   1          Delay5us();                 //延时
  82   1      }
  83          //****************************************************************************************************
  84          //I2C接收应答信号
  85          //****************************************************************************************************
  86          bit I2C_RecvACK()
  87          {
  88   1          SCL = 1;                    //拉高时钟线
  89   1          Delay5us();                 //延时
  90   1          CY = SDA;                   //读应答信号
  91   1          SCL = 0;                    //拉低时钟线
  92   1          Delay5us();                 //延时
  93   1          return CY;
  94   1      }
  95          //*****************************************************************************************************
  96          //向I2C总线发送一个字节数据
  97          //*****************************************************************************************************
  98          void I2C_SendByte(uint8 dat)
  99          {
 100   1          uint8  i;
 101   1          for (i=0; i<8; i++)         //8位计数器
 102   1          {
 103   2              dat <<= 1;              //移出数据的最高位
 104   2              SDA = CY;               //送数据口
 105   2              SCL = 1;                //拉高时钟线
 106   2              Delay5us();             //延时
 107   2              SCL = 0;                //拉低时钟线
 108   2              Delay5us();             //延时
 109   2          }
 110   1          I2C_RecvACK();
 111   1      }
 112          //*****************************************************************************************************
 113          //从I2C总线接收一个字节数据
 114          //******************************************************************************************************
 115          uint8 I2C_RecvByte()
 116          {
C51 COMPILER V9.59.0.0   MPU6050                                                           07/01/2020 15:24:24 PAGE 3   

 117   1          uint8  i;
 118   1          uint8  dat = 0;
 119   1          SDA = 1;                    //使能内部上拉,准备读取数据,
 120   1          for (i=0; i<8; i++)         //8位计数器
 121   1          {
 122   2              dat <<= 1;
 123   2              SCL = 1;                //拉高时钟线
 124   2              Delay5us();             //延时
 125   2              dat |= SDA;             //读数据               
 126   2              SCL = 0;                //拉低时钟线
 127   2              Delay5us();             //延时
 128   2          }
 129   1          return dat;
 130   1      }
 131          //*****************************************************************************************************
 132          //向I2C设备写入一个字节数据
 133          //*****************************************************************************************************
 134          void Single_WriteI2C(uint8 REG_Address,uint8 REG_data)
 135          {
 136   1          I2C_Start();                  //起始信号
 137   1          I2C_SendByte(SlaveAddress);   //发送设备地址+写信号
 138   1          I2C_SendByte(REG_Address);    //内部寄存器地址，
 139   1          I2C_SendByte(REG_data);       //内部寄存器数据，
 140   1          I2C_Stop();                   //发送停止信号
 141   1      }
 142          //*******************************************************************************************************
 143          //从I2C设备读取一个字节数据
 144          //*******************************************************************************************************
 145          uint8 Single_ReadI2C(uint8 REG_Address)
 146          {
 147   1        uint8  REG_data;
 148   1        I2C_Start();                   //起始信号
 149   1        I2C_SendByte(SlaveAddress);    //发送设备地址+写信号
 150   1        I2C_SendByte(REG_Address);     //发送存储单元地址，从0开始  
 151   1        I2C_Start();                   //起始信号
 152   1        I2C_SendByte(SlaveAddress+1);  //发送设备地址+读信号
 153   1        REG_data=I2C_RecvByte();       //读出寄存器数据
 154   1        I2C_SendACK(1);                //接收应答信号
 155   1        I2C_Stop();                    //停止信号
 156   1        return REG_data;
 157   1      }
 158          //******************************************************************************************************
 159          //初始化MPU6050
 160          //******************************************************************************************************
 161          void InitMPU6050(void)
 162          {
 163   1        Single_WriteI2C(PWR_MGMT_1, 0x00);  //解除休眠状态
 164   1        Single_WriteI2C(SMPLRT_DIV, 0x07);
 165   1        Single_WriteI2C(CONFIG, 0x04);
 166   1        Single_WriteI2C(GYRO_CONFIG, 0x18);
 167   1        Single_WriteI2C(ACCEL_CONFIG, 0x1f);//0x0a//4g 0.63hz
 168   1      }
 169          //******************************************************************************************************
 170          //合成数据
 171          //******************************************************************************************************
 172          int GetData(uint8 REG_Address)
 173          {
 174   1        uint8  H,L;
 175   1        H=Single_ReadI2C(REG_Address);
 176   1        L=Single_ReadI2C(REG_Address+1);
 177   1        return ((H<<8)+L);   //合成数据
 178   1      }
C51 COMPILER V9.59.0.0   MPU6050                                                           07/01/2020 15:24:24 PAGE 4   

 179          //******************************************************************************************************
 180          //超级终端（串口调试助手）上显示10位数据
 181          //******************************************************************************************************
 182          // 大于0部分
 183          void Display_up_zeros(int value)
 184          { 
 185   1        uint8  i;
 186   1        lcd_printf(up_zeros, value);      //转换数据显示
 187   1        for(i=0;i<2;i++)
 188   1        {
 189   2          U1SendData(up_zeros[i]);
 190   2        }
 191   1      }
 192          // 小于0部分
 193          void Display_below_zeros(int value)
 194          { 
 195   1        uint8  i;
 196   1        lcd_printf_below_zeros(belowzeros, value);      //转换数据显示
 197   1        for(i=0;i<4;i++)
 198   1        {
 199   2          U1SendData(belowzeros[i]);
 200   2        }
 201   1      }
 202          /*********************************END FILE*************************************/
 203          void lcd_printf2(uint8 *s,int temp_data)
 204          {
 205   1        if(temp_data<0)
 206   1        {
 207   2          temp_data=-temp_data;
 208   2          *s='-';
 209   2        }
 210   1        else *s=' ';
 211   1      
 212   1        *++s =temp_data/10000+0x30;
 213   1        temp_data=temp_data%10000;     //取余运算
 214   1      
 215   1        *++s =temp_data/1000+0x30;
 216   1        temp_data=temp_data%1000;     //取余运算
 217   1      
 218   1        *++s =temp_data/100+0x30;
 219   1        temp_data=temp_data%100;     //取余运算
 220   1        *++s =temp_data/10+0x30;
 221   1        temp_data=temp_data%10;      //取余运算
 222   1        *++s =temp_data+0x30;   
 223   1      }
 224          void Display10BitData(int value)
 225          { 
 226   1        uint8 i;
 227   1        lcd_printf2(dis, value);      //转换数据显示
 228   1        for(i=0;i<6;i++)
 229   1        {
 230   2          U1SendData(dis[i]);
 231   2        }
 232   1      }
 233          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1123    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     14      28
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.59.0.0   MPU6050                                                           07/01/2020 15:24:24 PAGE 5   

   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
